# version format
version: 1.0.{build}
image: Visual Studio 2017
clone_folder: C:\workspace\OPC-UA\quasar\
build:
  verbosity: normal
notifications:
- provider: Email
  to:
  - quasar-developers@cern.ch
  subject: quasar windows build status changed
  on_build_success: false
  on_build_failure: false
  on_build_status_changed: true

environment:
  BOOST_PATH_HEADERS: "C:\\workspace\\OPC-UA\\quasar\\windows-lib-dependencies\\boost\\lib\\native\\include"
  BOOST_PATH_LIBS: "C:\\workspace\\OPC-UA\\quasar\\windows-lib-dependencies\\boost"
  CODE_SYNTHESYS_XSD: "C:\\Program Files (x86)\\CodeSynthesis XSD 4.0"
  OPENSSL: "C:\\workspace\\OPC-UA\\quasar\\windows-lib-dependencies\\openssl-vc141\\build\\native"
  XERCESC: "C:\\workspace\\OPC-UA\\quasar\\windows-lib-dependencies\\xerces-c-static\\build\\native"

# scripts that run after cloning repository
install:
  - ps : Write-Output "Installing python packages..."
  - ps : python -m pip install lxml=3.4.4 # specific version is important
  - ps : python -m pip install pygit2
  - ps : Write-Output "Installed python packages"

  # use chocolatey wherever possible
  - ps : Write-Output "Installing chocolatey packages..."
  - ps : choco install --yes git
  - ps : choco install --yes astyle
  - ps : choco install --yes xsltproc # provides xmllint
  - ps : choco install --yes nuget.commandline
  - ps : Write-Output "Installed chocolatey packages"

  # if no chocolatey package available use nuget (often the case for libs)
  - ps : Write-Output "Installing nuget packages to [windows-lib-dependencies]"
  - ps : if(Test-Path .\windows-lib-dependencies)
         {
          Write-Output "removing existing windows-lib-dependencies";
          Remove-Item .\windows-lib-dependencies -Force -Recurse;
         }
         New-Item -ItemType Directory -Force -Path .\windows-lib-dependencies
  - ps : nuget install xerces-c-static -NonInteractive -ExcludeVersion -OutputDirectory .\windows-lib-dependencies
  - ps : nuget install openssl-vc141 -NonInteractive -ExcludeVersion -OutputDirectory .\windows-lib-dependencies
  - ps : nuget install boost-vc141 -NonInteractive -ExcludeVersion -OutputDirectory .\windows-lib-dependencies
  - ps : Write-Output "Installed nuget packages to [windows-lib-dependencies]"

  # no chocolatey, no nuget ? Do it manually
  - ps : Write-Output "Installing xsdcxx..."
  - ps : Invoke-WebRequest "https://codesynthesis.com/download/xsd/4.0/windows/i686/xsd-4.0.msi" -OutFile ".\windows-lib-dependencies\xsd-4.0.msi"
  - ps : Start-Process .\windows-lib-dependencies\xsd-4.0.msi -Wait -ArgumentList /quiet
  - ps : if(Test-Path "C:\Program Files (x86)\CodeSynthesis XSD 4.0\bin\xsd.exe")
         {
          Write-Output "Must change xsd.exe to xsdcxx.exe to avoid clash with built-in windows xsd.exe (on some systems)";
          Copy-Item -Path "C:\Program Files (x86)\CodeSynthesis XSD 4.0\bin\xsd.exe" -Destination "C:\Program Files (x86)\CodeSynthesis XSD 4.0\bin\xsdcxx.exe";
         }
         else
         {
          Write-Output "ERROR! Failed to locate installed xsdcxx binary file, required for generating C++ handler code from XSD schema";
          Exit 1;
         }
  - ps : Write-Output "Installed xsdcxx"

  # start build, note optional module open62541-compat required: provides OPC-UA back-end
  - cmd : python quasar.py set_build_config open6_win_configuration.cmake
  - cmd : python quasar.py enable_module open62541-compat
  - cmd : python quasar.py prepare_build Release
  - cmd : python quasar.py build Release

  - ps : Write-Output "Build completed!"
  - ps : if(Test-Path bin/OpcUaServer.exe)
         {
          Write-Output "Succesfully Built QUASAR." ;
         }
         else
         {
          Write-Output "ERROR! There was a problem building QUASAR; The script will now terminate." ;
          Exit 1;
         }

# uncomment to block VM deletion for investigating broken builds.
on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
